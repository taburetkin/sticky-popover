const t={top:"bottom",left:"right"},i={top:"height",bottom:"height",left:"width",right:"width"},e={width:{dimension:"width",opposite:"height",start:"left",end:"right"},height:{dimension:"height",opposite:"width",start:"top",end:"bottom"}};function n(t,n){const o=i[t],r=e[o],s=r.opposite,d=e[s];return{id:t,opposite:n,dimension:o,dimensionStart:r.start,dimensionEnd:r.end,altDimension:s,altStart:d.start,altEnd:d.end,main:{...r},alt:{...d}}}const o=Object.keys(t).reduce(((i,e)=>{const o=t[e];return i[e]=n(e,o),i[o]=n(o,e),i}),{}),r=t=>t<0?0:t,s=(t,i,e,n,r=o[e].opposite)=>n(t[e],i[e])?i[e]:n(t[e],i[r])?t[e]:i[r],d=(t,i,e)=>s(t,i,e,((t,i)=>t<i)),h=(t,i,e)=>s(t,i,e,((t,i)=>t>i));function l(t){return t.visibleHeight=r(t.bottom-t.top),t.visibleWidth=r(t.right-t.left),t.isVisible=t.visibleHeight>0&&t.visibleWidth>0,t}function a(t,i){let e=i.offsetMain||0;return t.id===t.dimensionStart?-e:e}function g(t,i,e,n){const o=t[e.id],r=i[e.dimension];return(e.id===e.dimensionStart?o-r:o)+a(e,n)}function c(t,i,e,n,o){const r=t[e.altStart],s=t[e.altEnd],d=i[e.altDimension],h=function(t,i){const e=t.offsetAlt||0;return"center"===i||0===e?0:"start"===i?e:-e}(o,n);switch(n){case"start":return r+h;case"end":return s-d+h}return(r+s)/2-d/2}function u(t,i,e,n,o){const r=e[t.alt.start],s=(e[t.alt.start]+e[t.alt.end])/2,d={start:n-r>o,center:s>o/2&&n-s>o/2,end:e[t.alt.end]>o};if(d[i])return i;if("center"===i)return d.start?"start":d.end?"end":i;if(d.center)return"center";const h="start"===i?"end":"start";return d[h]?h:i}function f(t,i,e,n){return{[(t=(t=>"string"==typeof t?o[t]:t)(t)).alt.dimension]:e[t.alt.dimension],[t.main.dimension]:t.id===t.main.start?i[t.id]-n:e[t.dimension]-i[t.id]-n}}const m={getBoundingBox(t,i){const e=t.getBoundingClientRect();if(!i)return e;const{left:n,top:o,right:r,bottom:s,width:d,height:h}=e;return{left:n,top:o,right:r,bottom:s,width:d,height:h}},getVisibleBox(t,i){if(i=i||this.getViewport(),!t||t===document.body)return i;let e=t,n=[];for(;null!=e;)n.push(e),e=e.parentNode!==document.body?e.parentNode:null;let{left:o,top:r,right:s,bottom:a}=i;const g={left:o,top:r,right:s,bottom:a};for(;n.length;){let t=n.pop();const i=this.getBoundingBox(t);g.width=i.width,g.height=i.height,o=d(i,g,"left"),r=d(i,g,"top"),s=h(i,g,"right"),a=h(i,g,"bottom"),g.left=o,g.top=r,g.right=s,g.bottom=a}return l(g)},getViewport(){let t=window.innerWidth,i=window.innerHeight;const e={left:0,top:0,right:t,bottom:i,width:t,height:i},n=window.visualViewport;return n&&(e.width=n.width,e.height=n.height),l(e)},findPosition(t,i,e,n,r,s){let d=o[e],h=n;if(!1!==r.autoPlacement){let e=this.detectAvailableSide(t,i,d,n,s,r);d=e.side,h=e.align}return{position:this.getSidePosition(t,i,d,h,r),side:d.id,align:h}},detectAvailableSide(t,i,e,n,r,s){"string"==typeof e&&(e=o[e]);let d=e,h=n;const l=a(e,s),g=[e.id,e.altEnd,e.altStart,e.opposite];for(let e of g){const s=f(e,t,r,l);if(s.width>=i.width&&s.height>=i.height){d=o[e];const r=i[d.altDimension];h=u(d,n,t,s[d.altDimension],r);break}}return{side:d,align:h}},getSidePosition:(t,i,e,n,o)=>({[e.dimensionStart]:g(t,i,e,o),[e.altStart]:c(t,i,e,n,o),[e.dimensionEnd]:void 0,[e.altEnd]:void 0})};export{m as positioningApi};
